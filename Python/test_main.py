from main import two_sum
import unittest

class TestMySolution(unittest.TestCase):

    def test0(self):        # вводный тест
        self.assertEqual(two_sum([2,3,4],5),[0,1])

    def test1(self):        # проверка все ли переменные целочисленные
        self.assertEqual(two_sum(['c',2,3,4],5),"не верный тип данных")
        # исправляем ошибку проверкой каждого элемента nums на целочисленность; показываем пользователю его ошибку

    def test2(self):        # проверка все ли переменные целочисленные
        self.assertEqual(two_sum([3.4444,3.5555],6),"не верный тип данных")
        # исправляем ошибку проверкой каждого элемента nums на целочисленность; показываем пользователю его ошибку

    def test3(self):        # проверка все ли переменные целочисленные
            self.assertEqual(two_sum([[3], [25]], 28),"не верный тип данных")
        # исправляем ошибку проверкой каждого элемента nums на целочисленность; показываем пользователю его ошибку

    def test4(self):        # проверка все ли переменные целочисленные
            self.assertEqual(two_sum([False, 3,3,True], 6), "не верный тип данных")
        # исправляем ошибку проверкой каждого элемента nums на целочисленность; показываем пользователю его ошибку

    def test5(self):        # проверка все ли переменные целочисленные
            self.assertEqual(two_sum([{'correct':1,'incorrect':2}, 3], 5), 'не верный тип данных')
        # исправляем ошибку проверкой каждого элемента nums на целочисленность; показываем пользователю его ошибку

    def test6(self):        # проверка есть ли массив
            self.assertEqual(two_sum((3, 3), 6), "нет массива")
        # исправляем ошибку проверкой является ли переменная nums массивом

    def test7(self):        # проверка количества элементов
            self.assertEqual(two_sum([3], 3), "не верное количество элементов")
        # исправляем ошибку проверкой, что количество элементов массива nums >=2

    def test8(self):        # проверка целочисленный ли переменная target
            self.assertEqual(two_sum([1,2,4,5,3], [5]), "не верный тип данных")
        # исправляем ошибку проверкой переменной target на целочисленность

    def test9(self):        # проверка целочисленный ли переменная target
            self.assertEqual(two_sum([4,5,6], 'p'), "не верный тип данных")
        # исправляем ошибку проверкой переменной target на целочисленность

    def test10(self):       # проверка целочисленный ли переменная target
            self.assertEqual(two_sum([1,2,3], 'five'), "не верный тип данных")
        # исправляем ошибку проверкой переменной target на целочисленность

if __name__=='__main__':
    unittest.main()